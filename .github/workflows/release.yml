name: Build and Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (optional, defaults to commit hash)'
        required: false
        type: string
        default: ''
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false
      draft:
        description: 'Create as draft'
        required: false
        type: boolean
        default: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
            npm run dist:win
          elif [ "$RUNNER_OS" == "macOS" ]; then
            npm run dist:mac
          else
            npm run dist:linux
          fi
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: dist/
          retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit hash
        id: commit
        run: echo "hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit.outputs.hash }}
          release_name: ${{ github.event.inputs.release_name || steps.commit.outputs.hash }}
          draft: ${{ github.event.inputs.draft }}
          prerelease: ${{ github.event.inputs.prerelease }}
          body: |
            ## Changes
            
            <!-- Add release notes here -->
            
            ## Downloads
            
            - **Windows**: Download the `.exe` installer
            - **macOS**: Download the `.dmg` file
            - **Linux**: Download the `.AppImage` file

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/release-windows-latest/Helios Launcher-setup-2.2.1.exe
          asset_name: HeliosLauncher-setup-${{ steps.commit.outputs.hash }}.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset (x64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/release-macOS-latest/Helios Launcher-setup-2.2.1-x64.dmg
          asset_name: HeliosLauncher-setup-${{ steps.commit.outputs.hash }}-x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Asset (arm64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/release-macOS-latest/Helios Launcher-setup-2.2.1-arm64.dmg
          asset_name: HeliosLauncher-setup-${{ steps.commit.outputs.hash }}-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/release-ubuntu-latest/Helios Launcher-2.2.1.AppImage
          asset_name: HeliosLauncher-${{ steps.commit.outputs.hash }}.AppImage
          asset_content_type: application/octet-stream